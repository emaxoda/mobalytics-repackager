diff -raN -U 6 original/moba-desktop/src/app/app.js modified/moba-desktop/src/app/app.js
--- original/moba-desktop/src/app/app.js	2023-03-02 19:06:49.869518707 -0300
+++ modified/moba-desktop/src/app/app.js	2023-03-02 19:06:49.927520018 -0300
@@ -70,13 +70,12 @@
         ipc_protocol_1.init();
         app_internal_webview_1.init();
         valorant_lcu_controller_1.init();
         main_utils_1.showOrCreateWindow();
         app_tray_1.init();
         deep_linking_1.addDeepLinkingListeners();
-        setInterval(promo_1.maybeShowSplashScreen, 1000 * 60 * 10);
     }));
     electron_1.app.on('window-all-closed', () => {
     });
     electron_1.app.on('before-quit', () => {
         var _a;
         const lolSettingsFetcher = lol_settings_fetcher_1.LolSettingsFetcher.getInstance();
diff -raN -U 6 original/moba-desktop/src/app/app-tray.js modified/moba-desktop/src/app/app-tray.js
--- original/moba-desktop/src/app/app-tray.js	2023-03-02 19:06:49.869518707 -0300
+++ modified/moba-desktop/src/app/app-tray.js	2023-03-02 19:06:49.927520018 -0300
@@ -23,13 +23,13 @@
 const path = __importStar(require("path"));
 const electron_1 = require("electron");
 const paths_1 = require("../paths");
 const environment_1 = require("../utils/environment");
 const app_utils_1 = require("./app-utils");
 const main_utils_1 = require("../windows/main/main.utils");
-const iconName = environment_1.isWin ? 'tray-icon-win.ico' : 'tray-icon-mac.png';
+const iconName = environment_1.isWin ? 'tray-icon-win.ico' : (environment_1.isLinux ? 'icon.png' : 'tray-icon-mac.png');
 const trayIcon = path.resolve(paths_1.RESOURCES_PATH, iconName);
 let tray = null;
 function init() {
     if (!tray) {
         tray = new electron_1.Tray(trayIcon);
         const contextMenu = electron_1.Menu.buildFromTemplate([
diff -raN -U 6 original/moba-desktop/src/app/deep-linking.js modified/moba-desktop/src/app/deep-linking.js
--- original/moba-desktop/src/app/deep-linking.js	2023-03-02 19:06:49.869518707 -0300
+++ modified/moba-desktop/src/app/deep-linking.js	2023-03-02 19:06:49.927520018 -0300
@@ -34,12 +34,17 @@
 const main_utils_1 = require("../windows/main/main.utils");
 function initDeepLinking() {
     electron_1.app.removeAsDefaultProtocolClient(app_config_1.MOBA_PROTOCOL_NAME);
     if (environment_1.IS_ELECTRON_DEV && environment_1.isWin) {
         electron_1.app.setAsDefaultProtocolClient(app_config_1.MOBA_PROTOCOL_NAME, process.execPath, [path.resolve(process.argv[1])]);
     }
+    else if (process.defaultApp){
+        if (process.argv.length >= 2) {
+            electron_1.app.setAsDefaultProtocolClient(app_config_1.MOBA_PROTOCOL_NAME, process.execPath, [path.resolve(process.argv[1])]);
+        }
+    }
     else {
         electron_1.app.setAsDefaultProtocolClient(app_config_1.MOBA_PROTOCOL_NAME);
     }
 }
 exports.initDeepLinking = initDeepLinking;
 function addDeepLinkingListeners() {
@@ -49,13 +54,13 @@
             processDeepLinkingUrl(url);
         }
         logs_1.appUrlsLog.debug(`open-url: ${url}`);
         main_utils_1.showAndRestoreMainWindow();
     });
     electron_1.app.on('second-instance', (_e, argv) => {
-        if (environment_1.isWin) {
+        if (environment_1.isWin || environment_1.isLinux) {
             const url = argv.find(it => it.startsWith(`${app_config_1.MOBA_PROTOCOL_NAME}:`));
             url && processDeepLinkingUrl(url);
         }
         logs_1.appUrlsLog.debug('second-instance: ', argv);
         main_utils_1.showAndRestoreMainWindow();
     });
diff -raN -U 6 original/moba-desktop/src/dialogs/select-game-folder-dialog.js modified/moba-desktop/src/dialogs/select-game-folder-dialog.js
--- original/moba-desktop/src/dialogs/select-game-folder-dialog.js	2023-03-02 19:06:49.869518707 -0300
+++ modified/moba-desktop/src/dialogs/select-game-folder-dialog.js	2023-03-02 19:06:49.927520018 -0300
@@ -10,18 +10,31 @@
 };
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.showSelectLolClientFolderDialog = void 0;
 const ipc_messages_types_1 = require("../../../moba-shared/src/common/types/desktop/ipc-messages.types");
 const remote_1 = require("@electron/remote");
 const ipc_renderer_1 = require("../utils/ipc-renderer");
+const environment_1 = require("../utils/environment");
 function showSelectLolClientFolderDialog(window) {
     if (remote_1.dialog) {
+        let install_message;
+        let install_title;
+        if (environment_1.isLinux){
+            install_message = 'Choose the LoL installation path. e.g $WINEPREFIX/drive_c/Riot Games/League of Legends/';
+            install_title = 'Choose the LoL installation path. e.g $WINEPREFIX/drive_c/Riot Games/League of Legends/';
+        }
+        else
+        {
+            install_message = 'Choose the LoL installation path. e.g /Applications/League of Legends.app/';
+            install_title = 'Choose the LoL installation path. e.g C:\\Riot Games\\League of Legends';
+        }
+            
         return remote_1.dialog
             .showOpenDialog(window, {
-            title: 'Choose the LoL installation path. e.g C:\\Riot Games\\League of Legends',
-            message: 'Choose the LoL installation path. e.g /Applications/League of Legends.app/',
+            title: install_title,
+            message: install_message,
             buttonLabel: 'Select Directory',
             properties: ['openDirectory', 'treatPackageAsDirectory', 'showHiddenFiles'],
         })
             .then((result) => __awaiter(this, void 0, void 0, function* () {
             if (!result.canceled) {
                 const folder = result.filePaths ? result.filePaths[0] : null;
diff -raN -U 6 original/moba-desktop/src/lol/utils/in-game-imports/in-game-items-import.js modified/moba-desktop/src/lol/utils/in-game-imports/in-game-items-import.js
--- original/moba-desktop/src/lol/utils/in-game-imports/in-game-items-import.js	2023-03-02 19:06:49.859518481 -0300
+++ modified/moba-desktop/src/lol/utils/in-game-imports/in-game-items-import.js	2023-03-02 19:06:49.927520018 -0300
@@ -35,19 +35,24 @@
 const path_1 = __importDefault(require("path"));
 const fse = __importStar(require("fs-extra"));
 const logs_1 = require("../../../utils/logs");
 const in_game_imports_types_1 = require("../../../../../moba-shared/src/lol/types/in-game-imports.types");
 const lcu_connection_1 = require("../../../utils/lcu-connection");
 const root_store_1 = require("../../../common/store/root-store");
+const environment_1 = require("../../../utils/environment");
 function importLolGameItems(gameItemsData) {
     return __awaiter(this, void 0, void 0, function* () {
         try {
             if (!gameItemsData.blocks.length)
                 return in_game_imports_types_1.LcuGameItemsImportStatus.EMPTY_BLOCKS_LIST;
             const processGamePath = yield lcu_connection_1.getLCUPathFromProcess();
-            const gamePath = processGamePath || root_store_1.getAppSettings().getGameFolderPath();
+            let gamePath;
+            if(environment_1.isLinux)
+                gamePath = root_store_1.getAppSettings().getGameFolderPath();
+            else
+                gamePath = processGamePath || root_store_1.getAppSettings().getGameFolderPath();
             if (!gamePath)
                 return in_game_imports_types_1.LcuGameItemsImportStatus.GAME_PATH_NOT_FOUND;
             const filePath = path_1.default.join(gamePath, 'Config', 'Global', 'Recommended', '!mobalytics.json');
             yield fse.ensureFile(filePath);
             const blocks = gameItemsData.blocks.map(it => (Object.assign(Object.assign({}, it), { recMath: false, minSummonerLevel: -1, maxSummonerLevel: -1, showIfSummonerSpell: '', hideIfSummonerSpell: '' })));
             const content = {
diff -raN -U 6 original/moba-desktop/src/utils/desktop-bridge.js modified/moba-desktop/src/utils/desktop-bridge.js
--- original/moba-desktop/src/utils/desktop-bridge.js	2023-03-02 19:06:49.853518346 -0300
+++ modified/moba-desktop/src/utils/desktop-bridge.js	2023-03-02 19:06:49.927520018 -0300
@@ -29,14 +29,15 @@
 const show_file_dialog_1 = require("../dialogs/show-file-dialog");
 const version_const_1 = require("./version.const");
 const platform = os.platform();
 exports.bridge = {
     version: remote_1.app.getVersion() === '0.0.1' ? version_const_1.DEV_DESKTOP_APP_VERSION : remote_1.app.getVersion(),
     platform,
-    isWin: platform !== 'darwin',
+    isWin: platform === 'win32',
     isMac: platform === 'darwin',
+    isLinux: platform === 'linux',
     logsPath: path.resolve(remote_1.app.getPath('logs')),
     settings: null,
     settingsV2: null,
     logsService: null,
     ipcRendererSend: ipc_renderer_1.ipcRendererSend,
     ipcRendererOn: ipc_renderer_1.ipcRendererOn,
diff -raN -U 6 original/moba-desktop/src/utils/environment.js modified/moba-desktop/src/utils/environment.js
--- original/moba-desktop/src/utils/environment.js	2023-03-02 19:06:49.853518346 -0300
+++ modified/moba-desktop/src/utils/environment.js	2023-03-02 19:06:49.927520018 -0300
@@ -21,18 +21,19 @@
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.AppExecPath = exports.LolLogsSubPath = exports.RiotClientName = exports.RiotClientNameMac = exports.RiotClientNameWin = exports.LolProcessName = exports.LoLProcessNameMac = exports.LoLProcessNameWin = exports.IS_ELECTRON_DEV = exports.IS_JEST_TESTING = exports.isX64 = exports.isWin = exports.isOsX = exports.APP_USER_MODEL_ID = void 0;
 const path = __importStar(require("path"));
 exports.APP_USER_MODEL_ID = 'MobalyticsHQ.DesktopApp';
 exports.isOsX = process.platform === 'darwin';
 exports.isWin = process.platform === 'win32';
+exports.isLinux = process.platform === 'linux';
 exports.isX64 = process.arch === 'x64';
 exports.IS_JEST_TESTING = process.env.JEST_WORKER_ID !== undefined;
-exports.IS_ELECTRON_DEV = require('electron-is-dev');
+exports.IS_ELECTRON_DEV = false;
 exports.LoLProcessNameWin = 'LeagueClient.exe';
 exports.LoLProcessNameMac = 'LeagueClient.app';
-exports.LolProcessName = exports.isWin ? exports.LoLProcessNameWin : exports.LoLProcessNameMac;
+exports.LolProcessName = (exports.isWin || exports.isLinux) ? exports.LoLProcessNameWin : exports.LoLProcessNameMac;
 exports.RiotClientNameWin = 'RiotClientServices.exe';
 exports.RiotClientNameMac = '';
 exports.RiotClientName = exports.isWin ? exports.RiotClientNameWin : exports.RiotClientNameMac;
 exports.LolLogsSubPath = path.join('Logs', 'GameLogs');
 exports.AppExecPath = `"${path.normalize(path.resolve(process.execPath))}"`;
 //# sourceMappingURL=environment.js.map
\ No hay ningún carácter de nueva línea al final del archivo
diff -raN -U 6 original/moba-desktop/src/windows/about/about.window.js modified/moba-desktop/src/windows/about/about.window.js
--- original/moba-desktop/src/windows/about/about.window.js	2023-03-02 19:06:49.853518346 -0300
+++ modified/moba-desktop/src/windows/about/about.window.js	2023-03-02 19:10:52.270633585 -0300
@@ -37,13 +37,13 @@
             resizable: false,
             titleBarStyle: 'default',
             maximizable: false,
             minimizable: false,
             webPreferences: {
                 preload: path.join(__dirname, 'about.preload.js'),
-                nodeIntegration: false,
+                nodeIntegration: true,
                 contextIsolation: false,
                 webSecurity: true,
                 allowRunningInsecureContent: false,
                 experimentalFeatures: false,
                 autoplayPolicy: 'user-gesture-required',
             },
diff -raN -U 6 original/moba-desktop/src/windows/game-overlay/game-overlay.window.js modified/moba-desktop/src/windows/game-overlay/game-overlay.window.js
--- original/moba-desktop/src/windows/game-overlay/game-overlay.window.js	2023-03-02 19:06:49.853518346 -0300
+++ modified/moba-desktop/src/windows/game-overlay/game-overlay.window.js	2023-03-02 19:11:02.336832854 -0300
@@ -45,13 +45,13 @@
         fullscreen: environment_1.isWin,
         focusable: !isOffscreenMode,
         enableLargerThanScreen: true,
         webPreferences: {
             offscreen: isOffscreenMode,
             preload: path.join(__dirname, 'game-overlay.preload.js'),
-            nodeIntegration: false,
+            nodeIntegration: true,
             contextIsolation: false,
             webSecurity: true,
             allowRunningInsecureContent: false,
             experimentalFeatures: false,
             autoplayPolicy: 'user-gesture-required',
         },
diff -raN -U 6 original/moba-desktop/src/windows/main/main.window.js modified/moba-desktop/src/windows/main/main.window.js
--- original/moba-desktop/src/windows/main/main.window.js	2023-03-02 19:06:49.853518346 -0300
+++ modified/moba-desktop/src/windows/main/main.window.js	2023-03-02 19:11:09.602976151 -0300
@@ -66,13 +66,13 @@
             width: appWindowState.width,
             height: appWindowState.height,
             backgroundColor: desktop_default_settings_1.WINDOW_BG_COLOR,
             fullscreen: false,
             webPreferences: {
                 preload: path.join(__dirname, 'main.preload.js'),
-                nodeIntegration: false,
+                nodeIntegration: true,
                 contextIsolation: false,
                 webSecurity: true,
                 allowRunningInsecureContent: false,
                 experimentalFeatures: false,
                 autoplayPolicy: 'user-gesture-required',
             },
